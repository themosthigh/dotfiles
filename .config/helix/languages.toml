[language-server.emmet]
command = "emmet-ls"
args = ["--stdio"]


[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]


[language-server.eslint.config]
codeActionsOnSave = { mode = "all", "source.fixAll.eslint" = false }
format = { enable = false }
nodePath = ""
quiet = false
rulesCustomizations = []
run = "onType"
validate = "on"
experimental = {}
problems = { shortenToSingleLine = false }

# Define the vtsls language server
[language-server.vtsls]
command = "vtsls"
args = ["--stdio"]
languages = { typescript = [
  { formatCommand = "prettier --stdin-filepath ${INPUT}", formatStdin = true },
] }

[language-server.tailwindcss]
command = "tailwindcss-language-server"

[language-server.colors]
command = "uwu_colors"
args = ["--stdio"]

[language-server.vtsls.config.typescript.inlayHints]
parameterNames = { enabled = "all" }
parameterTypes = { enabled = true }
variableTypes = { enabled = true }
propertyDeclarationTypes = { enabled = true }
enumMemberValues = { enabled = true }


[language-server.typescript-language-server]
command = "vtsls"
args = ["--stdio"]
config.hostInfo = "helix"

[language-server.typescript-language-server.config.typescript]
updateImportsOnFileMove.enabled = "always"
suggest.completeFunctionCalls = true
tsserver.enableTracing = true
inlayHints.parameterNames.enabled = "all"
inlayHints.parameterTypes.enabled = true
inlayHints.variableTypes.enabled = true
inlayHints.propertyDeclarationTypes.enabled = true
inlayHints.functionLikeReturnTypes = true
inlayHints.enumMemberValues.enabled = true
format.enable = false
format.semicolons = "remove"
preferences.importModuleSpecifier = "non-relative"
preferences.importModuleSpecifierEnding = "auto"
tsserver.pluginPaths = ["typescript-plugin-css-modules", "./node_modules"]


[[language]]
name = "jsx"
file-types = ["js", "jsx"]
formatter = { command = "prettier", args = [
  # "--stdin",
  "--parser",
  "typescript",
] }
language-servers = [
  { name = "vtsls", except-features = [
    "format",
  ] },
  { name = "emmet" },
  { name = "eslint" },
]

[[language]]
name = "tsx"
file-types = ["ts", "tsx"]
formatter = { command = "prettier", args = ["--parser", "typescript"] }
language-servers = [
  { name = "vtsls", except-features = [
    "format",
  ] },
  { name = "tailwindcss-ls" },
  { name = "emmet" },
  { name = "eslint" },
]
auto-format = false


[[language]]
name = "css"
file-types = ["css"]
formatter = { command = "prettier", args = ["--parser", "css"] }
language-servers = [
  { name = "vscode-css-language-server" },
  { name = "tailwindcss-ls" },
  { name = "colors" },
]


[[language]]
name = "markdown"
file-types = ["md", "mdx"]
formatter = { command = "prettier", args = ["--parser", "markdown"] }
